<style>
  .announcement-scroll .scroller {
    --luca-scroll-duration: {{ section.settings.content_speed }};
  }
</style>

<div
  class="{{ section.settings.background_color }}"
  role="alert"
>
  <div
    class="mask-x overflow-hidden py-2 md:py-4"
  >
    <ul
      x-data="
        {
          move: (clear) => {
            const scroller = $el;

            if (clear) {
              scroller.querySelectorAll('[aria-hidden=true]').forEach(el => el.remove());
            }

            const scrollerContent = Array.from(scroller.children)[0];
            const scrollerGap = getComputedStyle(scroller).getPropertyValue('gap');

            let clones = Math.floor(window.innerWidth / (scrollerContent.offsetWidth + parseInt(scrollerGap)) * 2);
            if (clones % 2 === 0) {
              clones += 1;
            }

            const duplicatedItem = scrollerContent.cloneNode(true);
            duplicatedItem.setAttribute('aria-hidden', true);
            duplicatedItem.setAttribute('tabindex', '-1');

            for (let i = 0; i < clones; i++) {
              scroller.appendChild(duplicatedItem.cloneNode(true));
            };

            scroller.style.setProperty('--luca-scroll-gap', `calc(${scrollerGap} / 2)`);
          }
        }
      "
      x-init="move()"
      @resize.window.debounce="move(true)"
      class="scroller inline-flex w-max animate-scroll items-center {{ section.settings.content_color }} {{ section.settings.content_gap }} {{ section.settings.content_size }}"
    >
      <li class="text flex flex-row items-center whitespace-nowrap font-serif {{ section.settings.content_gap }}">
        {% for block in section.blocks %}
          {% case block.type %}
            {% when 'text' %}
              {{ block.settings.text }}
            {% when 'image' %}
              {% if block.settings.image != blank %}
                {{ block.settings.image | image_url: width: 400 | image_tag: class: 'h-14 w-auto' }}
              {% endif %}
          {% endcase %}
        {% endfor %}
      </li>
    </ul>
  </div>
</div>




{% schema %}
{
  "tag": "section",
  "name": "t:sections.announcement_scroll.name",
  "class": "announcement-scroll",
  "blocks": [
    {
      "name": "t:common.headers.image",
      "type": "image",
      "settings": [
        {
          "id": "image",
          "type": "image_picker",
          "label": "t:common.labels.image.select"
        }
      ]
    },
    {
      "name": "t:common.headers.text",
      "type": "text",
      "settings": [
        {
          "id": "text",
          "type": "richtext",
          "label": "t:common.labels.text.write",
          "default": "<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras non viverra turpis. Cras non viverra turpis.</p>"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "t:sections.announcement_scroll.name",
      "blocks": [
        {
          "type": "text"
        }
      ]
    }
  ],
  "settings": [
    {
      "type": "header",
      "content": "t:common.headers.content"
    },
    {
      "id": "content_size",
      "type": "select",
      "label": "t:common.labels.content.size",
      "default": "text-h4 md:text-h3",
      "options": [
        {
          "label": "t:common.sizes.extra_large",
          "value": "text-h3 md:text-h2"
        },
        {
          "label": "t:common.sizes.large",
          "value": "text-h4 md:text-h3"
        },
        {
          "label": "t:common.sizes.medium",
          "value": "text-body-lg"
        },
        {
          "label": "t:common.sizes.small",
          "value": "text-body-base"
        },
        {
          "label": "t:common.sizes.tiny",
          "value": "text-body-sm"
        }
      ]
    },
    {
      "id": "content_gap",
      "type": "select",
      "label": "t:common.labels.spacing.select",
      "default": "gap-16 md:gap-52",
      "options": [
        {
          "label": "t:common.sizes.large",
          "value": "gap-28 md:gap-96"
        },
        {
          "label": "t:common.sizes.medium",
          "value": "gap-16 md:gap-52"
        },
        {
          "label": "t:common.sizes.small",
          "value": "gap-10 md:gap-28"
        }
      ]
    },
    {
      "id": "content_speed",
      "type": "select",
      "label": "t:common.labels.speed.select",
      "default": "6s",
      "options": [
        {
          "label": "t:common.speeds.veryslow",
          "value": "24s"
        },
        {
          "label": "t:common.speeds.slow",
          "value": "12s"
        },
        {
          "label": "t:common.speeds.normal",
          "value": "6s"
        },
        {
          "label": "t:common.speeds.fast",
          "value": "3s"
        }
      ]
    },
    {
      "id": "content_color",
      "type": "select",
      "label": "t:common.labels.content.color",
      "default": "text-white",
      "options": [
        {
          "label": "t:common.colors.black",
          "value": "text-black"
        },
        {
          "label": "t:common.colors.white",
          "value": "text-white"
        },
        {
          "label": "t:common.colors.neutral",
          "value": "text-neutral-600"
        },
        {
          "label": "t:common.colors.primary",
          "value": "text-primary"
        },
        {
          "label": "t:common.colors.secondary",
          "value": "text-secondary"
        },
        {
          "label": "t:common.colors.tertiary",
          "value": "text-tertiary"
        }
      ]
    },
    {
      "type": "header",
      "content": "t:common.headers.background"
    },
    {
      "id": "background_color",
      "type": "select",
      "label": "t:common.labels.background.color",
      "default": "bg-black",
      "options": [
        {
          "label": "t:common.colors.black",
          "value": "bg-black"
        },
        {
          "label": "t:common.colors.white",
          "value": "bg-white"
        },
        {
          "label": "t:common.colors.neutral",
          "value": "bg-neutral-100"
        },
        {
          "label": "t:common.colors.primary",
          "value": "bg-primary"
        },
        {
          "label": "t:common.colors.accent",
          "value": "bg-accent"
        },
        {
          "label": "t:common.colors.secondary",
          "value": "bg-secondary"
        },
        {
          "label": "t:common.colors.tertiary",
          "value": "bg-tertiary"
        }
      ]
    }
  ]
}
{% endschema %}